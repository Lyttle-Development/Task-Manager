@use "./variables" as v;

// Hide main nav by default
.default-layout > .main-nav {
  transform: translateX(-100%);
  transition: transform 0.8s ease-in-out;
}

// Show main nav when main-nav--open class is added to default-layout
.default-layout.main-nav--open > .main-nav {
  transform: translateX(0);
}

// No margin left by default.
.default-layout > section {
  margin-left: 0;
  transition: margin-left 0.8s ease-in-out;
  min-height: 100vh;
  position: relative;
}

// Add margin left when main-nav--open class is added to default-layout
.default-layout.main-nav--open:not(.mobile) > section {
  margin-left: v.$main-nav-width;
}

.default-layout.no-startup {
    .default-layout__content,
    .main-nav {
        transition: none;
    }
}

// Stop page from scrolling when main nav is open
.default-layout.main-nav--open.mobile > section {
  max-height: 100vh;
  overflow: hidden;
}

.snackbar--active {
  padding-bottom: 9.5rem !important;
}

// Changes when on mobile.
.mobile {
  .container {
    padding: 0 1rem;
  }

  .snackbar {
    justify-content: center;
  }

  .tip-card__message {
    flex-wrap: wrap;
  }

  .tip-card__title {
    font-size: 1.2rem;
    background-size: .8rem !important;
    padding-left: 2.5rem !important;
  }

  .snackbar-container {
    width: 100%;
    padding-bottom: 1rem;
    padding-top: .5rem;

    .snackbar-message {
      font-size: 1rem;
      text-align: center;
      width: 100%;

      .snackbar-amount {
        transform: translateY(-.5rem);
        margin-left: .1rem;
        font-size: .5rem;
      }
    }

    .snackbar-actions {
      justify-content: center;

      button {
        font-size: .8rem;
        padding: .8rem 1.5rem;
        border-radius: .5rem;
      }
    }
  }
}

.mock {
  opacity: .5;
  display: inline-block;
  width: 100%;
  height: 1rem;
  background-color: transparentize(v.$color-text, .5);
  overflow: hidden;

  &:after {
    content: '';
    display: block;
    height: 100%;
    width: 200%;
    background-color: transparentize(v.$color-text, .5);
    animation: alternate mock-effect 1s infinite ease-in-out;
  }
}

@keyframes mock-effect {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.gray {
  filter: grayscale(100%);
}